<?php

namespace App\Jobs;

use App\Models\GenericExport;
use App\Notifications\SendGeneratedExportFile;
use App\Repositories\Contracts\BranchRepository;
use Illuminate\Support\Facades\Storage;
use Mpdf\Mpdf;

trait CommonExportFileJobTrait
{
    public $timeout = 3600;
    public $memory = 512;
    public $export;
    public $searchCriteria;
    public $directoryName;
    public $fileSystemAdapter;
    public $csvFilePath;
    public $header;
    public $subject;
    public $branchName;

    /**
     * Create a new job instance.
     *
     * @param GenericExport $export
     * @param array $searchCriteria
     */
    public function __construct(GenericExport $export, array &$searchCriteria = [])
    {
        $this->directoryName = 'export';
        $this->export = $export;
        $this->searchCriteria = &$searchCriteria;
        $this->fileSystemAdapter = Storage::disk('public');
    }

    /**
     * set the branch name for pdf header
     *
     * @return void
     */
    public function setBranchName()
    {
        $this->branchName = 'All Branch';
        if (isset($this->searchCriteria['branchId'])){
            $branch = app(BranchRepository::class)->findOne($this->searchCriteria['branchId']);
            $this->branchName = $branch ? $branch->name : 'N/A';
        }
    }

    /**
     * @return Mpdf
     * @throws \Mpdf\MpdfException
     */
    public function initializeMpdf(): Mpdf
    {
        return new Mpdf([
            'mode' => 'utf-8',
            'format' => 'A4',
            'margin_top' => 42,
            'margin_left' => 10,
            'margin_right' => 10,
            'margin_bottom' => 12,
            'title' => $this->export->fileName . '.pdf'
        ]);
    }

    /**
     * @param $pdf
     * @return void
     */
    public function putProcessedPdf($pdf)
    {
        $fileContent = $pdf->Output( $this->export->fileName . '.pdf', 'S');

        $this->fileSystemAdapter->put( $this->directoryName . '/' .$this->export->fileName . '.pdf', $fileContent, 'public');

        //remove csv file after pdf file generation
        $this->fileSystemAdapter->delete($this->directoryName . '/' .$this->export->fileName . '.csv');
    }

    /**
     * @return void
     */
    public function sendEmailToUser()
    {
        $this->export->createdByUser->notify(new SendGeneratedExportFile([
            'file_name' => $this->export->fileName . '.' . $this->export->exportAs,
            'directory_name' => $this->directoryName,
            'export_as' => $this->export->exportAs,
            'header' => $this->header,
            'subject' => $this->subject,
            'app_description' => 'Your Requested '. $this->subject .' Please Check Your E-mail',
            'mail_description' => 'Your Requested '. $this->subject .' And Attached in This E-mail'
        ]));

        // We are done processing
        $this->export->update([
            'status' => 'processed',
            'statusMessage' => 'Export file processed successfully and sent to the user email',
        ]);
    }


    /**
     * @return void
     */
    public function failed() {
        // This method is called if the job fails
        // Remove the files generated by the jobs if the jobs failed
        $filePath = $this->directoryName . '/' . $this->export->fileName;

        if ($this->fileSystemAdapter->exists($filePath . '.csv')) {
            $this->fileSystemAdapter->delete($filePath . '.csv');
        }
        if ($this->fileSystemAdapter->exists($filePath . '.pdf')) {
            $this->fileSystemAdapter->delete($filePath . '.pdf');
        }
    }
}
